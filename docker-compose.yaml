version: '3.0'
services:
  backend:
    build:
      context: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: >
      sh -c "python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000 &&
             python manage.py collectstatic --no-input --clear"
    depends_on:
      - redis
      - db
  redis:
    image: redis:latest
    container_name: ccr-test-redis
    env_file:
      - .env
    hostname:
      "${REDIS_HOST}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  db:
    image: postgres:14.3-alpine
    container_name: ccr-test-db
    env_file:
      - .env
    hostname:
      "${POSTGRES_HOST}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"

  celery:
    restart: always
    build:
      context: .
    command: celery -A ccr worker -l info
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - backend


  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A ccr beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - backend
      - celery